# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /english                    controllers.Application.index()
POST    /english                    controllers.Application.authenticate()
POST    /farsi                      controllers.controllersFarsi.ApplicationFa.authenticate()
GET     /loggedIn                   controllers.Application.loggedIn()
GET     /english/signUp             controllers.Signup.register()
POST    /english/signUp             controllers.Signup.authenticate()

GET     /loggedout                  controllers.Application.logout()
GET     /:lang/blog/                controllers.Blog.display(lang : String,page : Integer)
GET     /:lang/blog/postid=:postId            controllers.Blog.showBlogPostFullContent(lang : String,postId : Integer)
POST    /:lang/blog/postid=:postId            controllers.Blog.postComment(lang : String,postId : Integer)
POST 	/:lang/blog/postid=:postId/delete	  controllers.Blog.deletePost(commentId:Long,lang:String,postId:Integer)
GET     /:lang/services                   controllers.Services.display(lang : String)
GET     /:lang/books                      controllers.Books.display(lang : String)
#
GET     /		                    controllers.controllersFarsi.ApplicationFa.index()
#GET     /farsi	                    controllers.controllersFarsi.ApplicationFa.index()
GET     /farsi/signUp               controllers.controllersFarsi.Signup.register()
POST    /farsi/signUp               controllers.controllersFarsi.Signup.authenticate()
GET     /:lang/aboutUs              controllers.About.display(lang : String)
POST    /:lang/aboutUs              controllers.About.sendFeedBack(lang : String)
GET     /:lang/aboutUs/team			controllers.About.displayTeam(lang : String)
#
GET     /:lang/book/bookid=:bookId            controllers.Books.showBookProfile(lang : String, bookId : Integer)
POST    /:lang/book/bookid=:bookId            controllers.Books.postReview(lang : String,bookId : Integer)
POST 	/:lang/book/bookid=:bookId/delete	  controllers.Books.deleteReview(reviewId:Long,lang:String,bookId:Integer)
GET     /:lang/book/topicid=:topicId          controllers.Books.showByTopic(lang : String, topicId : Integer)
GET     /:lang/book/shelfAll  				  controllers.Books.showShelfAll(lang : String, callerEmail : String)
GET     /:lang/book/shelfRead  				  controllers.Books.showShelfRead(lang : String)
GET     /:lang/book/shelfReading  				  controllers.Books.showShelfReading(lang : String)
GET     /:lang/book/shelfToRead  				  controllers.Books.showShelfToRead(lang : String)
POST    /:lang/book/shelfAll/addedBook=:bookId 	  controllers.Books.addtoShelfAll(lang : String,bookId : Integer)
POST 	/:lang/book/shelfAll/deleted=:bookUserId  controllers.Books.deleteFromShelfAll(bookUserId : Long,lang : String)
POST 	/:lang/book/shelfAll/movedToRead	  controllers.Books.moveToShelfRead(bookUserId : Long,lang : String)
POST 	/:lang/book/shelfAll/movedToReading	  controllers.Books.moveToShelfReading(bookUserId : Long,lang : String)
POST 	/:lang/book/shelfAll/movedToToRead	  controllers.Books.moveToShelfToRead(bookUserId : Long,lang : String)
GET   	/farsi/getAverageOfUserRating		    	  controllers.Books.getBooksUserRating(bookId :Integer,ratedByUser:String)
POST    /farsi/rateTheBook  				  controllers.Books.rateTheBook(userEmail:String,bookID:Integer, rate:Integer)
#
POST	/:lang/services              controllers.Services.sendFeedBack(lang : String)
GET     /:lang/therapy               controllers.Therapy.display(lang : String)
POST    /:lang/therapy/              controllers.Therapy.postFeedback(lang : String)
#
GET     /farsi/getImages             controllers.controllersFarsi.ApplicationFa.getImageUrls()
GET     /farsi/getStatistics 		 controllers.controllersFarsi.ApplicationFa.getStatistics()

GET     /:lang/event                 controllers.Event.displayEvent(lang : String)
POST    /farsi/event                 controllers.Event.register()
#
GET 	/:lang/profile/userEmail=:userEmail		  controllers.Settings.showProfile(lang : String, userEmail : String)
GET	    /:lang/settings 						  controllers.Settings.showSettings(lang:String)
POST	/:lang/settings  						  controllers.Settings.saveSettings(lang:String)
POST    /:lang/settings/unregister 				  controllers.Settings.unregister(lang:String, userEmail : String)

GET     /alert/friendRequest			  controllers.Relationship.friendRequest(user1Email : String,user2Email : String)
GET     /:lang/friend/user/:called     controllers.Settings.showFriends(lang:String,called:String)
GET     /:lang/user/acc			      controllers.Relationship.acceptFriendRequest(lang:String,pendingUserEmail:String)
GET     /:lang/user/dec		          controllers.Relationship.declineFriendRequest(lang:String,pendingUserEmail:String)
GET 	/:lang/user/unf			  	  controllers.Relationship.unfriend(lang:String,userToBeUnfriended:String)
GET 	/:lang/user/blo 			  controllers.Relationship.blockUser(lang:String,userToBeBlocked:String)
# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)
